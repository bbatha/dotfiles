#!/usr/bin/env bash

#ident	"@(#)profile-user	0.9	01/07/08 FDS"
#
#	This is the default standard profile provided to users.
#	They are expected to edit it to meet their own needs.
#
if [ -e /var/cfengine/classes/nextgen ]
then
  # shellcheck disable=1091
  # 3rd party code
  source /home/fonix/prd_progs/tools/engineering-login.sh
fi

# less resize bugs
shopt -s checkwinsize

# don't get booted for inactivity
unset autologout

ME=$(whoami)
export DISPLAY="${ME}pc.pc.factset.com:0.0"

# Load directory color maps
[[ -f "$HOME/.dir_colors" ]] && eval "$(dircolors "${HOME}/.dir_colors")"

# Better ssh interrupt support. Causes less hangs
stty -ixon -ixoff

# Use the unix standard editor
export EDITOR=nvim
export P4EDITOR=nvim
export P4MERGE=nvimdiff

# : user@hostname[$PWD] ;
# use : PS1 ; format so that it can be a no-op when pasted
export PS1=": \u@\h:[\W]; "
# set ps2 for easy mutiline pastes
export PS2=" "


# Retain bash history like zsh
#shopt -s histappend
export HISTSIZE=100000
export HISTCONTROL=ignoredups:erasedups
export PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND$'\n'}history -a; history -c; history -r"


# fix linewrapping
shopt -s checkwinsize

# These two should be set already but I set them explicitly
# and I don't know why. Leaving them there for now
export LANG=en_US.UTF-8
export P4USER=bbatha

BBATHA_ROOT=$HOME/pkg

# ensure these don't get reset when we source .profile-user
[ -z "$OLD_PATH" ] && export OLD_PATH=$PATH
[ -z "$OLD_LD_LIBRARY_PATH" ] && export OLD_LD_LIBRARY_PATH=$LD_LIBRARY_PATH
# pkgsrc
export PATH=$BBATHA_ROOT/bin:$BBATHA_ROOT/sbin:$PATH
export LD_LIBRARY_PATH=$BBATHA_ROOT/lib
export PKGSRCDIR=$HOME/opt/pkgsrc
# add pip & stack
export PATH=$HOME/.local/bin:$PATH
export MANPATH=$BBATHA_ROOT/man:$MANPATH
export INFOPATH=$BBATHA_ROOT/share/info:$INFOPATH
export PKG_CONFIG_PATH=$BBATHA_ROOT/lib/pkgconfig:$PKG_CONFIG_PATH
export XDG_CONFIG_HOME=$HOME/.config

# Don't need latest ruby or node on scrn hosts
if [[ "$(hostname)" != "unixscrn"* ]]
then
  # rbenv
  export PATH=$HOME/.rbenv/bin:$PATH
  eval "$(rbenv init -)"

  # nvm
  export NVM_NODEJS_ORG_MIRROR=http://nodejs.org/dist
  export NVM_DIR="/home/user/bbatha/.nvm"
  # shellcheck disable=1090
  # don't check the sourced file. Its from a 3rd party
  [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
  # shellcheck disable=1090
  # don't check the sourced file. Its from a 3rd party
  [[ -r $NVM_DIR/bash_completion ]] && . "$NVM_DIR/bash_completion"

  # multirust
  export PATH=$PATH:$HOME/.multirust/bin:$HOME/.multirust/cargo/bin
fi

function nvm_up() {
  git -C "$NVM_DIR" pull origin master --tags
  git -C "$NVM_DIR" rebase --onto "$(git -C "$NVM_DIR" describe --abbrev=0 --tags)" master
}

# Scratch directory
export SCRATCH_HOME=/home/dev/scratch/developers/bbatha

# Make grep colorful
export GREP_OPTIONS='--color=auto'

# p4fds is an abomination. Nuke it from orbit
unalias p4 >/dev/null 2>/dev/null
# p4fds2 might be acceptable
# alias p4='/home/user/tholzer/src/p4fds/binaries/linux26x86_64/p4fds2'
# review board uploader
alias rb='/home/data/index/script/common/submit_review_board.pl'
# use ls colors and prefix symbols for executable, and folders
alias ls='ls -hF --color=auto'
# enable x forwarding fwiw
alias ssh='ssh -X'
# pub build tool
alias pub='/home/dev/build/pub/bin/pub'
# disable cores for tmux
alias tmux='ulimit -c 0; command tmux'
# typing in bundle exec all the time is annoying
alias be='bundle exec'
# render escaped color sequences
alias less='less -R'
# get pkgsrc vulerabilities
alias pkgupvuln='$BBATHA_ROOT/sbin/pkg_admin -K ~/pkg/var/db/pkg fetch-pkg-vulnerabilities >/dev/null 2>&1'
# vim with the libstdc++ that supports C++ 11 for YouCompleteMe.
#alias vim='LD_LIBRARY_PATH=$BBATHA_ROOT/gcc48/lib64:$LD_LIBRARY_PATH vim'
# p4view --check testing
alias p4view='/home/fonix/prd_progs/build/cross_platform/testing/p4view_check/p4view'
# syntax highlighting cat
alias ccat='pygmentize -g'
# use neovim
alias vim='LD_LIBRARY_PATH="$BBATHA_ROOT/gcc48/lib64:$LD_LIBRARY_PATH" nvim'
alias vimdiff='LD_LIBRARY_PATH="$BBATHA_ROOT/gcc48/lib64:$LD_LIBRARY_PATH" nvim -d'
# grant some lima tokens
alias lima-curl='curl -H "$(/home/fds/svc_lima/bin/lima_token $USER FDS | tr -d '\''\r'\'')"'

# platform doesn't work with pkgsrc's curl libs force it to use
# the system binary + libs
function platform() { (
  export PATH="$OLD_PATH"
  export LD_LIBRARY_PATH="$OLD_LD_LIBRARY_PATH"
  command platform "$@"
)}

# syntax highlighting less
function cless() {
  pygmentize -g "${1}" | less
}

# this is how you hack aliases for subcommands
# for p4 we want to intercept vdiff and launch vimdiff instead
# of using the normal gdiff
function p4() {
  p4fds2=/home/fonix/prd_progs/build/cross_platform/testing/p4fds2/p4fds2
  # shellcheck disable=2016
  # we want late expansion
  local nvimdiff='LD_LIBRARY_PATH="$BBATHA_ROOT/gcc48/lib64:$LD_LIBRARY_PATH" nvim -d'
  # use command p4 when not using p4fds
  case "$*" in
    vdiff2* ) shift 1; P4DIFF="$nvimdiff" $p4fds2 diff2 "$@" ;;
    vdiff* ) shift 1; P4DIFF="$nvimdiff" $p4fds2 diff "$@" ;;
    diff2* ) shift 1; P4DIFF=colordiff $p4fds2 diff2 -du "$@" ;;
    diff* ) shift 1; P4DIFF=colordiff $p4fds2 diff -du "$@" ;;
    * ) command p4 "$@" ;;
  esac
}

function ruby-build() {
  command ruby-build "$1"
}

# Add our bash completion scripts
if [[ $PS1 && -f "$BBATHA_ROOT/share/bash-completion/bash_completion" ]]
then
  # shellcheck disable=1090
  # 3rd party script
  source "$BBATHA_ROOT/share/bash-completion/bash_completion"
fi

export RUST_SRC_PATH="${HOME}/pkg/src/rust/src"
